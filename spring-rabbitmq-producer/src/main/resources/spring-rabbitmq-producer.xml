<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/rabbit
						   http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:rabbitmq.properties"/>

    <!--定义rabbitmq连接工厂，connectionFactory-->
    <!--在连接参数里面测试发布确认和发布回退-->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}"
                               port="${rabbitmq.port}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtual-host}"
                               publisher-confirms="true"
                               publisher-returns="true"/>

    <!--定义管理交换机，队列-->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--定义rabbitTemplate操作对象，可以在代码中方便的发送消息-->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>


    <!--Hello World模式，默认交换机-->
    <!--定义持久化队列，若不存在则自动创建，
        若不指定交换机则使用Hello World模式绑定到默认的交换机，默认交换机名字为""，路由键为队列名称-->
    <rabbit:queue id="spring_queue" name="spring_queue" auto-declare="true"/>


    <!--Pub/Sub模式，fanout交换机-->
    <!--定义持久化队列，不存在则自动创建-->
    <rabbit:queue id="spring_fanout_queue_1" name="spring_fanout_queue_1" auto-declare="true"/>
    <rabbit:queue id="spring_fanout_queue_2" name="spring_fanout_queue_2" auto-declare="true"/>
    <!--定义fanout类型交换机-->
    <rabbit:fanout-exchange  id= "spring_fanout_exchange" name="spring_fanout_exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="spring_fanout_queue_1"/>
            <rabbit:binding queue="spring_fanout_queue_2"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!--Topics模式，Topics交换机-->
    <!--定义持久化队列，不存在则自动创建-->
    <rabbit:queue id="spring_topics_queue_star" name="spring_topics_queue_star" auto-declare="true"/>
    <rabbit:queue id="spring_topics_queue_well" name="spring_topics_queue_well" auto-declare="true"/>
    <rabbit:queue id="spring_topics_queue_well2" name="spring_topics_queue_well2" auto-declare="true"/>
    <!--定义topics类型交换机-->
    <rabbit:topic-exchange id="spring_topics_exchange" name="spring_topics_exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding pattern="heima.*" queue="spring_topics_queue_star"></rabbit:binding>
            <rabbit:binding pattern="heima.#" queue="spring_topics_queue_well"></rabbit:binding>
            <rabbit:binding pattern="itcast.#" queue="spring_topics_queue_well2"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--
    死信队列步骤：
    1、声明正常的队列（test_queue_dlx）和交换机(test_exchange_dlx)并进行绑定
    2、声明死信队列（queue_dlx）和死信交换机(exchange_dlx)并进行绑定
    3、将正常的队列和死信交换机进行绑定
    -->

    <!--1、声明正常的队列（test_queue_dlx）和交换机(test_exchange_dlx)并进行绑定-->
    <rabbit:queue id="test_queue_dlx" name="test_queue_dlx">
        <!--3、将正常的队列和死信交换机进行绑定-->
        <rabbit:queue-arguments>
            <!--3.1 设置绑定的死信交换机名称：x-dead-letter-exchange-->
            <entry key="x-dead-letter-exchange" value="exchange_dlx"/>
            <!--3.2 设置发送给死信交换机的路由key：x-dead-letter-routing-key-->
            <entry key="x-dead-letter-routing-key" value="dlx.#"/>
            <!--4.1 设置队列的过期时间ttl,用来测试死信队列-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"/>
            <!--4.2 设置队列的长度限制，max-length-->
            <entry key="x-max-length" value="10" value-type="java.lang.Integer"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:topic-exchange name="test_exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="test.dlx.#" queue="test_queue_dlx"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>


    <!--2、声明死信队列（queue_dlx）和死信交换机(exchange_dlx)并进行绑定-->
    <rabbit:queue id="queue_dlx" name="queue_dlx"></rabbit:queue>
    <rabbit:topic-exchange name="exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="dlx.#" queue="queue_dlx"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

</beans>